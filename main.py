# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã.
# @test_by_coding_lover_bot --> –Ω–∏–∫ –≤ —Ç–≥
import logging
import random
from telegram.ext import Application, CommandHandler, ConversationHandler, MessageHandler, filters
import json


logger = logging.getLogger(__name__)
BOT_TOKEN = '7959374624:AAF30eaeCvVPbBt8aAR9u8IrHKneCn8LNtM'

A = []
with open('history_test.json', encoding='utf-8') as cat_file:
    data = json.load(cat_file)
for key, value in data.items():
    for i in value:
        A.append([i['question'], i['response'].lower()])
print(A)
random.shuffle(A)
print(A)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)


async def start(update, context):
    context.user_data['index'] = 0
    context.user_data['count'] = 0
    await update.message.reply_text(f'''üëã –ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ –∏—Å—Ç–æ—Ä–∏–∏?

üìã –Ø –∑–∞–¥–∞–º —Ç–µ–±–µ 10 –≤–æ–ø—Ä–æ—Å–æ–≤. –û—Ç–≤–µ—á–∞–π –Ω–∞ –Ω–∏—Ö –≤ —á–∞—Ç–µ ‚Äî —É–∑–Ω–∞–µ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ—à—å –∏—Å—Ç–æ—Ä–∏—é!
–ù–∞–ø–∏—à–∏ /stop, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏.
‚ùì –í–æ–ø—Ä–æ—Å {context.user_data['index'] + 1}/10:
{A[context.user_data['index']][0]}
''')
    return 1


async def get_next_question(update, context):
    text = update.message.text.lower()
    if text == A[context.user_data['index']][1]:
        await update.message.reply_text(f'''‚úÖ –û—Ç–ª–∏—á–Ω–æ!''')
        if context.user_data['index'] + 1 < len(A):
            context.user_data['index'] += 1
            context.user_data['count'] += 1
            await update.message.reply_text(f'''–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º:
‚ùì –í–æ–ø—Ä–æ—Å {context.user_data['index'] + 1}/10:
‚úçÔ∏è{A[context.user_data['index']][0]}''')
            return 1
        else:
            await update.message.reply_text(f'''üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!
–¢—ã –Ω–∞–±—Ä–∞–ª: {context.user_data['count']} –∏–∑ 10 –±–∞–ª–ª–æ–≤.
üîÅ –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑? –ù–∞–ø–∏—à–∏ /start
‚ùå –ò–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å ‚Äî /stop
''')
            return 1
    else:
        await update.message.reply_text(f'''‚ùå –£–≤—ã, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {A[context.user_data['index']][1]}''')
        context.user_data['index'] += 1
        if context.user_data['index'] < len(A):
            await update.message.reply_text(f'''–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º:
‚ùì –í–æ–ø—Ä–æ—Å {context.user_data['index'] + 1}/10:
‚úçÔ∏è{A[context.user_data['index']][0]}''')
        else:
            await update.message.reply_text(f'''üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!
–¢—ã –Ω–∞–±—Ä–∞–ª: {context.user_data['count']} –∏–∑ 10 –±–∞–ª–ª–æ–≤.
üîÅ –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑? –ù–∞–ø–∏—à–∏ /start
‚ùå –ò–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å ‚Äî /stop''')


async def stop(update, context):
    await update.message.reply_text('''üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!
–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è /start, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å —Å–Ω–æ–≤–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è.
''')
    return ConversationHandler.END


def main():
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Application.
    # –í–º–µ—Å—Ç–æ —Å–ª–æ–≤–∞ "TOKEN" –Ω–∞–¥–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather —Ç–æ–∫–µ–Ω
    application = Application.builder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥.
        # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /start. –û–Ω–∞ –∑–∞–¥–∞—ë—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å.
        entry_points=[CommandHandler('start', start)],

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞.
        # –í–∞—Ä–∏–∞–Ω—Ç —Å –¥–≤—É–º—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏, —Ñ–∏–ª—å—Ç—Ä—É—é—â–∏–º–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
        states={
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_next_question),
                CommandHandler('stop', stop)]
        },

        # –¢–æ—á–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /stop.
        fallbacks=[CommandHandler('stop', stop)]
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    main()
